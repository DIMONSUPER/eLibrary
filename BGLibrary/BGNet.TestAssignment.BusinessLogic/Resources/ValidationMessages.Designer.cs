//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BGNet.TestAssignment.BusinessLogic.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class ValidationMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ValidationMessages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BGNet.TestAssignment.BusinessLogic.Resources.ValidationMessages", typeof(ValidationMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Author can&apos;t be empty.
        /// </summary>
        public static string BookAuthorIdNotEmpty {
            get {
                return ResourceManager.GetString("BookAuthorIdNotEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Genre should contain maximum {MaxLength} characters.
        /// </summary>
        public static string BookGenreMaximumLength {
            get {
                return ResourceManager.GetString("BookGenreMaximumLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Genre should contain at least {MinLength} character.
        /// </summary>
        public static string BookGenreMinimumLength {
            get {
                return ResourceManager.GetString("BookGenreMinimumLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Publication year can&apos;t exceed current year.
        /// </summary>
        public static string BookPublicationYearLessThanOrEqualTo {
            get {
                return ResourceManager.GetString("BookPublicationYearLessThanOrEqualTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Title should contain maximum {MaxLength} characters.
        /// </summary>
        public static string BookTitleMaximumLength {
            get {
                return ResourceManager.GetString("BookTitleMaximumLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Title should contain at least {MinLength} character.
        /// </summary>
        public static string BookTitleMinimumLength {
            get {
                return ResourceManager.GetString("BookTitleMinimumLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Date of birth can&apos;t exceed current date.
        /// </summary>
        public static string DateOfBirthLessThanOrEqualTo {
            get {
                return ResourceManager.GetString("DateOfBirthLessThanOrEqualTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to First name should contain maximum {MaxLength} characters.
        /// </summary>
        public static string FirstNameMaximumLength {
            get {
                return ResourceManager.GetString("FirstNameMaximumLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to First name should contain at least {MinLength} character.
        /// </summary>
        public static string FirstNameMinimumLength {
            get {
                return ResourceManager.GetString("FirstNameMinimumLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last name should contain maximum {MaxLength} characters.
        /// </summary>
        public static string LastNameMaximumLength {
            get {
                return ResourceManager.GetString("LastNameMaximumLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last name should at least contain {MinLength} character.
        /// </summary>
        public static string LastNameMinimumLength {
            get {
                return ResourceManager.GetString("LastNameMinimumLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your address can&apos;t be empty.
        /// </summary>
        public static string UserAddressMinimumLength {
            get {
                return ResourceManager.GetString("UserAddressMinimumLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can&apos;t be 150+ years old.
        /// </summary>
        public static string UserDateOfBirthGreaterThan {
            get {
                return ResourceManager.GetString("UserDateOfBirthGreaterThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your password should contain maximum {MaxLength} characters.
        /// </summary>
        public static string UserPasswordMaximumLength {
            get {
                return ResourceManager.GetString("UserPasswordMaximumLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your password should contain at least {MinLength} characters.
        /// </summary>
        public static string UserPasswordMinimumLength {
            get {
                return ResourceManager.GetString("UserPasswordMinimumLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your username should contain only english letters and digits.
        /// </summary>
        public static string UserUsernameMatchesAlphabet {
            get {
                return ResourceManager.GetString("UserUsernameMatchesAlphabet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your username should contain maximum {MaxLength} characters.
        /// </summary>
        public static string UserUsernameMaximumLength {
            get {
                return ResourceManager.GetString("UserUsernameMaximumLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your username should contain at least {MinLength} characters.
        /// </summary>
        public static string UserUsernameMinimumLength {
            get {
                return ResourceManager.GetString("UserUsernameMinimumLength", resourceCulture);
            }
        }
    }
}
